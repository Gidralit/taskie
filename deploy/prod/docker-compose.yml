version: '3.8'

services:

  webserver:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - db
      - frontend
      - backend

  frontend:
    build:
      context: ../..
      dockerfile: deploy/prod/node/Dockerfile
    container_name: frontend_prod
    ports:
      - "5173:5173"
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://prod/api
    depends_on:
      - backend

  backend:
    build:
      context: ../..
      dockerfile: deploy/prod/php/Dockerfile
    container_name: backend_prod
    networks:
      - app-network
    ports:
      - "8000:8000"
    volumes:
      - ../../backend:/var/www
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
      DB_CONNECTION: "pgsql"
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_DATABASE: "testDB"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "root"
      DATABASE_URL: "postgres://postgres:root@db:5432/testDB"
    depends_on:
      - db
    command: >
      sh -c "echo 'Starting the build...';
      echo 'Установка зависимостей...';
      composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader;
      echo 'Установка миграций...';
      php artisan migrate:fresh --force;
      echo 'Запуск сервера...'; 
      php artisan serve --host=0.0.0.0 --port=8000";

  db:
    image: postgres:latest
    container_name: db_prod
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: testDB
    networks:
      - app-network
    volumes:
      - db_data:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
